class Solution {
    public boolean isVowel(char c){
        return (c=='a'||c=='e'||c=='i'||c=='o'||c=='u');
    }
    public long countOfSubstrings(String word, int k) {
       long count = 0;
       int consonants = 0 , right = 0 , left = 0;
       int prev = -1;
       HashMap<Character,Integer> vowelMap = new HashMap<>();

        int n = word.length();
        int[] nextConsonant = new int[n];
        int next = n;

        for(int i = n-1;i>=0;i--){
            nextConsonant[i] = next;
            if(!isVowel(word.charAt(i))){
                next = i;
            }
        }

        while(right<n){

            if(prev!=right){
                if(isVowel(word.charAt(right))){
                vowelMap.put(word.charAt(right),vowelMap.getOrDefault(word.charAt(right),0)+1);
            }
            else{
                consonants++;
            }
            prev = right;
            }


            if(right>=(5+k-1)){
                if(vowelMap.size()==5 && consonants==k){
                    count += nextConsonant[right]-right;
                }

                if ((vowelMap.size() == 5 && consonants == k) || (consonants > k)){
                    if(isVowel(word.charAt(left))){
                        vowelMap.put(word.charAt(left),vowelMap.get(word.charAt(left))-1);
                        if(vowelMap.get(word.charAt(left))==0){
                            vowelMap.remove(word.charAt(left));
                        }
                    }
                    else{
                        consonants--;
                    }
                    left++;
                }
                else{
                    right++;
                }
            }
            else{
                right++;
            }
        }

       return count; 
    }
}
